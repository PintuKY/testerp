[2022-03-31 01:22:25.681] [renderer1] [error] [Extension Host] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**


   Whoops\Exception\ErrorException 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:22:26.686] [renderer1] [error] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1
  ➜   1▕


   Whoops\Exception\ErrorException 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1

   Whoops\Exception\ErrorException 

  file_get_contents(Command line code): Failed to open stream: No such file or directory

  at vendor/filp/whoops/src/Whoops/Exception/Frame.php:123
    119▕                 return null;
    120▕             }
    121▕ 
    122▕             try {
  ➜ 123▕                 $this->fileContentsCache = file_get_contents($filePath);
    124▕             } catch (ErrorException $exception) {
    125▕                 // Internal file paths of PHP extensions cannot be opened
    126▕             }
    127▕         }

      [2m+7 vendor frames [22m
  8   [internal]:0
      Whoops\Run::handleShutdown()
  ➜   1▕

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:23:25.701] [renderer1] [error] [Extension Host] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**


   Whoops\Exception\ErrorException 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:23:26.706] [renderer1] [error] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1
  ➜   1▕


   Whoops\Exception\ErrorException 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1

   Whoops\Exception\ErrorException 

  file_get_contents(Command line code): Failed to open stream: No such file or directory

  at vendor/filp/whoops/src/Whoops/Exception/Frame.php:123
    119▕                 return null;
    120▕             }
    121▕ 
    122▕             try {
  ➜ 123▕                 $this->fileContentsCache = file_get_contents($filePath);
    124▕             } catch (ErrorException $exception) {
    125▕                 // Internal file paths of PHP extensions cannot be opened
    126▕             }
    127▕         }

      [2m+7 vendor frames [22m
  8   [internal]:0
      Whoops\Run::handleShutdown()
  ➜   1▕

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:24:25.685] [renderer1] [error] [Extension Host] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**


   Whoops\Exception\ErrorException 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:24:26.696] [renderer1] [error] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1
  ➜   1▕


   Whoops\Exception\ErrorException 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1

   Whoops\Exception\ErrorException 

  file_get_contents(Command line code): Failed to open stream: No such file or directory

  at vendor/filp/whoops/src/Whoops/Exception/Frame.php:123
    119▕                 return null;
    120▕             }
    121▕ 
    122▕             try {
  ➜ 123▕                 $this->fileContentsCache = file_get_contents($filePath);
    124▕             } catch (ErrorException $exception) {
    125▕                 // Internal file paths of PHP extensions cannot be opened
    126▕             }
    127▕         }

      [2m+7 vendor frames [22m
  8   [internal]:0
      Whoops\Run::handleShutdown()
  ➜   1▕

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:25:25.671] [renderer1] [error] [Extension Host] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**


   Whoops\Exception\ErrorException 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:25:26.684] [renderer1] [error] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1
  ➜   1▕


   Whoops\Exception\ErrorException 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1

   Whoops\Exception\ErrorException 

  file_get_contents(Command line code): Failed to open stream: No such file or directory

  at vendor/filp/whoops/src/Whoops/Exception/Frame.php:123
    119▕                 return null;
    120▕             }
    121▕ 
    122▕             try {
  ➜ 123▕                 $this->fileContentsCache = file_get_contents($filePath);
    124▕             } catch (ErrorException $exception) {
    125▕                 // Internal file paths of PHP extensions cannot be opened
    126▕             }
    127▕         }

      [2m+7 vendor frames [22m
  8   [internal]:0
      Whoops\Run::handleShutdown()
  ➜   1▕

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:26:25.675] [renderer1] [error] [Extension Host] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**


   Whoops\Exception\ErrorException 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:26:26.680] [renderer1] [error] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1
  ➜   1▕


   Whoops\Exception\ErrorException 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1

   Whoops\Exception\ErrorException 

  file_get_contents(Command line code): Failed to open stream: No such file or directory

  at vendor/filp/whoops/src/Whoops/Exception/Frame.php:123
    119▕                 return null;
    120▕             }
    121▕ 
    122▕             try {
  ➜ 123▕                 $this->fileContentsCache = file_get_contents($filePath);
    124▕             } catch (ErrorException $exception) {
    125▕                 // Internal file paths of PHP extensions cannot be opened
    126▕             }
    127▕         }

      [2m+7 vendor frames [22m
  8   [internal]:0
      Whoops\Run::handleShutdown()
  ➜   1▕

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:27:25.706] [renderer1] [error] [Extension Host] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**


   Whoops\Exception\ErrorException 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:27:26.716] [renderer1] [error] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1
  ➜   1▕


   Whoops\Exception\ErrorException 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1

   Whoops\Exception\ErrorException 

  file_get_contents(Command line code): Failed to open stream: No such file or directory

  at vendor/filp/whoops/src/Whoops/Exception/Frame.php:123
    119▕                 return null;
    120▕             }
    121▕ 
    122▕             try {
  ➜ 123▕                 $this->fileContentsCache = file_get_contents($filePath);
    124▕             } catch (ErrorException $exception) {
    125▕                 // Internal file paths of PHP extensions cannot be opened
    126▕             }
    127▕         }

      [2m+7 vendor frames [22m
  8   [internal]:0
      Whoops\Run::handleShutdown()
  ➜   1▕

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:28:25.699] [renderer1] [error] [Extension Host] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**


   Whoops\Exception\ErrorException 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:28:26.712] [renderer1] [error] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1
  ➜   1▕


   Whoops\Exception\ErrorException 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1

   Whoops\Exception\ErrorException 

  file_get_contents(Command line code): Failed to open stream: No such file or directory

  at vendor/filp/whoops/src/Whoops/Exception/Frame.php:123
    119▕                 return null;
    120▕             }
    121▕ 
    122▕             try {
  ➜ 123▕                 $this->fileContentsCache = file_get_contents($filePath);
    124▕             } catch (ErrorException $exception) {
    125▕                 // Internal file paths of PHP extensions cannot be opened
    126▕             }
    127▕         }

      [2m+7 vendor frames [22m
  8   [internal]:0
      Whoops\Run::handleShutdown()
  ➜   1▕

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:29:25.685] [renderer1] [error] [Extension Host] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**


   Whoops\Exception\ErrorException 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:29:26.697] [renderer1] [error] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1
  ➜   1▕


   Whoops\Exception\ErrorException 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1

   Whoops\Exception\ErrorException 

  file_get_contents(Command line code): Failed to open stream: No such file or directory

  at vendor/filp/whoops/src/Whoops/Exception/Frame.php:123
    119▕                 return null;
    120▕             }
    121▕ 
    122▕             try {
  ➜ 123▕                 $this->fileContentsCache = file_get_contents($filePath);
    124▕             } catch (ErrorException $exception) {
    125▕                 // Internal file paths of PHP extensions cannot be opened
    126▕             }
    127▕         }

      [2m+7 vendor frames [22m
  8   [internal]:0
      Whoops\Run::handleShutdown()
  ➜   1▕

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:30:25.707] [renderer1] [error] [Extension Host] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**


   Whoops\Exception\ErrorException 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:30:26.717] [renderer1] [error] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1
  ➜   1▕


   Whoops\Exception\ErrorException 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1

   Whoops\Exception\ErrorException 

  file_get_contents(Command line code): Failed to open stream: No such file or directory

  at vendor/filp/whoops/src/Whoops/Exception/Frame.php:123
    119▕                 return null;
    120▕             }
    121▕ 
    122▕             try {
  ➜ 123▕                 $this->fileContentsCache = file_get_contents($filePath);
    124▕             } catch (ErrorException $exception) {
    125▕                 // Internal file paths of PHP extensions cannot be opened
    126▕             }
    127▕         }

      [2m+7 vendor frames [22m
  8   [internal]:0
      Whoops\Run::handleShutdown()
  ➜   1▕

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:31:25.694] [renderer1] [error] [Extension Host] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**


   Whoops\Exception\ErrorException 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:31:26.794] [renderer1] [error] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1
  ➜   1▕


   Whoops\Exception\ErrorException 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1

   Whoops\Exception\ErrorException 

  file_get_contents(Command line code): Failed to open stream: No such file or directory

  at vendor/filp/whoops/src/Whoops/Exception/Frame.php:123
    119▕                 return null;
    120▕             }
    121▕ 
    122▕             try {
  ➜ 123▕                 $this->fileContentsCache = file_get_contents($filePath);
    124▕             } catch (ErrorException $exception) {
    125▕                 // Internal file paths of PHP extensions cannot be opened
    126▕             }
    127▕         }

      [2m+7 vendor frames [22m
  8   [internal]:0
      Whoops\Run::handleShutdown()
  ➜   1▕

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:32:25.686] [renderer1] [error] [Extension Host] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**


   Whoops\Exception\ErrorException 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:32:26.687] [renderer1] [error] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1
  ➜   1▕


   Whoops\Exception\ErrorException 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1

   Whoops\Exception\ErrorException 

  file_get_contents(Command line code): Failed to open stream: No such file or directory

  at vendor/filp/whoops/src/Whoops/Exception/Frame.php:123
    119▕                 return null;
    120▕             }
    121▕ 
    122▕             try {
  ➜ 123▕                 $this->fileContentsCache = file_get_contents($filePath);
    124▕             } catch (ErrorException $exception) {
    125▕                 // Internal file paths of PHP extensions cannot be opened
    126▕             }
    127▕         }

      [2m+7 vendor frames [22m
  8   [internal]:0
      Whoops\Run::handleShutdown()
  ➜   1▕

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:33:25.687] [renderer1] [error] [Extension Host] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**


   Whoops\Exception\ErrorException 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:33:26.699] [renderer1] [error] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1
  ➜   1▕


   Whoops\Exception\ErrorException 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1

   Whoops\Exception\ErrorException 

  file_get_contents(Command line code): Failed to open stream: No such file or directory

  at vendor/filp/whoops/src/Whoops/Exception/Frame.php:123
    119▕                 return null;
    120▕             }
    121▕ 
    122▕             try {
  ➜ 123▕                 $this->fileContentsCache = file_get_contents($filePath);
    124▕             } catch (ErrorException $exception) {
    125▕                 // Internal file paths of PHP extensions cannot be opened
    126▕             }
    127▕         }

      [2m+7 vendor frames [22m
  8   [internal]:0
      Whoops\Run::handleShutdown()
  ➜   1▕

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:34:25.691] [renderer1] [error] [Extension Host] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**


   Whoops\Exception\ErrorException 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:34:26.703] [renderer1] [error] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1
  ➜   1▕


   Whoops\Exception\ErrorException 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1

   Whoops\Exception\ErrorException 

  file_get_contents(Command line code): Failed to open stream: No such file or directory

  at vendor/filp/whoops/src/Whoops/Exception/Frame.php:123
    119▕                 return null;
    120▕             }
    121▕ 
    122▕             try {
  ➜ 123▕                 $this->fileContentsCache = file_get_contents($filePath);
    124▕             } catch (ErrorException $exception) {
    125▕                 // Internal file paths of PHP extensions cannot be opened
    126▕             }
    127▕         }

      [2m+7 vendor frames [22m
  8   [internal]:0
      Whoops\Run::handleShutdown()
  ➜   1▕

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:35:25.722] [renderer1] [error] [Extension Host] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**


   Whoops\Exception\ErrorException 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:35:26.727] [renderer1] [error] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1
  ➜   1▕


   Whoops\Exception\ErrorException 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1

   Whoops\Exception\ErrorException 

  file_get_contents(Command line code): Failed to open stream: No such file or directory

  at vendor/filp/whoops/src/Whoops/Exception/Frame.php:123
    119▕                 return null;
    120▕             }
    121▕ 
    122▕             try {
  ➜ 123▕                 $this->fileContentsCache = file_get_contents($filePath);
    124▕             } catch (ErrorException $exception) {
    125▕                 // Internal file paths of PHP extensions cannot be opened
    126▕             }
    127▕         }

      [2m+7 vendor frames [22m
  8   [internal]:0
      Whoops\Run::handleShutdown()
  ➜   1▕

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:36:25.689] [renderer1] [error] [Extension Host] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**


   Whoops\Exception\ErrorException 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:36:26.704] [renderer1] [error] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1
  ➜   1▕


   Whoops\Exception\ErrorException 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1

   Whoops\Exception\ErrorException 

  file_get_contents(Command line code): Failed to open stream: No such file or directory

  at vendor/filp/whoops/src/Whoops/Exception/Frame.php:123
    119▕                 return null;
    120▕             }
    121▕ 
    122▕             try {
  ➜ 123▕                 $this->fileContentsCache = file_get_contents($filePath);
    124▕             } catch (ErrorException $exception) {
    125▕                 // Internal file paths of PHP extensions cannot be opened
    126▕             }
    127▕         }

      [2m+7 vendor frames [22m
  8   [internal]:0
      Whoops\Run::handleShutdown()
  ➜   1▕

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:37:25.692] [renderer1] [error] [Extension Host] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**


   Whoops\Exception\ErrorException 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:37:26.694] [renderer1] [error] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1
  ➜   1▕


   Whoops\Exception\ErrorException 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1

   Whoops\Exception\ErrorException 

  file_get_contents(Command line code): Failed to open stream: No such file or directory

  at vendor/filp/whoops/src/Whoops/Exception/Frame.php:123
    119▕                 return null;
    120▕             }
    121▕ 
    122▕             try {
  ➜ 123▕                 $this->fileContentsCache = file_get_contents($filePath);
    124▕             } catch (ErrorException $exception) {
    125▕                 // Internal file paths of PHP extensions cannot be opened
    126▕             }
    127▕         }

      [2m+7 vendor frames [22m
  8   [internal]:0
      Whoops\Run::handleShutdown()
  ➜   1▕

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:38:25.692] [renderer1] [error] [Extension Host] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**


   Whoops\Exception\ErrorException 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:38:26.693] [renderer1] [error] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1
  ➜   1▕


   Whoops\Exception\ErrorException 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1

   Whoops\Exception\ErrorException 

  file_get_contents(Command line code): Failed to open stream: No such file or directory

  at vendor/filp/whoops/src/Whoops/Exception/Frame.php:123
    119▕                 return null;
    120▕             }
    121▕ 
    122▕             try {
  ➜ 123▕                 $this->fileContentsCache = file_get_contents($filePath);
    124▕             } catch (ErrorException $exception) {
    125▕                 // Internal file paths of PHP extensions cannot be opened
    126▕             }
    127▕         }

      [2m+7 vendor frames [22m
  8   [internal]:0
      Whoops\Run::handleShutdown()
  ➜   1▕

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:39:25.695] [renderer1] [error] [Extension Host] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**


   Whoops\Exception\ErrorException 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:39:26.696] [renderer1] [error] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1
  ➜   1▕


   Whoops\Exception\ErrorException 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1

   Whoops\Exception\ErrorException 

  file_get_contents(Command line code): Failed to open stream: No such file or directory

  at vendor/filp/whoops/src/Whoops/Exception/Frame.php:123
    119▕                 return null;
    120▕             }
    121▕ 
    122▕             try {
  ➜ 123▕                 $this->fileContentsCache = file_get_contents($filePath);
    124▕             } catch (ErrorException $exception) {
    125▕                 // Internal file paths of PHP extensions cannot be opened
    126▕             }
    127▕         }

      [2m+7 vendor frames [22m
  8   [internal]:0
      Whoops\Run::handleShutdown()
  ➜   1▕

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:40:25.722] [renderer1] [error] [Extension Host] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**


   Whoops\Exception\ErrorException 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:40:26.720] [renderer1] [error] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1
  ➜   1▕


   Whoops\Exception\ErrorException 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1

   Whoops\Exception\ErrorException 

  file_get_contents(Command line code): Failed to open stream: No such file or directory

  at vendor/filp/whoops/src/Whoops/Exception/Frame.php:123
    119▕                 return null;
    120▕             }
    121▕ 
    122▕             try {
  ➜ 123▕                 $this->fileContentsCache = file_get_contents($filePath);
    124▕             } catch (ErrorException $exception) {
    125▕                 // Internal file paths of PHP extensions cannot be opened
    126▕             }
    127▕         }

      [2m+7 vendor frames [22m
  8   [internal]:0
      Whoops\Run::handleShutdown()
  ➜   1▕

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:41:25.826] [renderer1] [error] [Extension Host] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**


   Whoops\Exception\ErrorException 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:41:26.836] [renderer1] [error] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1
  ➜   1▕


   Whoops\Exception\ErrorException 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1

   Whoops\Exception\ErrorException 

  file_get_contents(Command line code): Failed to open stream: No such file or directory

  at vendor/filp/whoops/src/Whoops/Exception/Frame.php:123
    119▕                 return null;
    120▕             }
    121▕ 
    122▕             try {
  ➜ 123▕                 $this->fileContentsCache = file_get_contents($filePath);
    124▕             } catch (ErrorException $exception) {
    125▕                 // Internal file paths of PHP extensions cannot be opened
    126▕             }
    127▕         }

      [2m+7 vendor frames [22m
  8   [internal]:0
      Whoops\Run::handleShutdown()
  ➜   1▕

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:42:25.720] [renderer1] [error] [Extension Host] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**


   Whoops\Exception\ErrorException 

  Class App\Models\DocumentAndNote contains 1 abstract method and must therefore be declared abstract or implement the remaining methods (App\Models\DocumentAndNote::getActivitylogOptions)

  at app/Models/DocumentAndNote.php:8
      4▕ 
      5▕ use Illuminate\Database\Eloquent\Model;
      6▕ use Spatie\Activitylog\Traits\LogsActivity;
      7▕ 
  ➜   8▕ class DocumentAndNote extends Model
      9▕ {
     10▕     use LogsActivity;
     11▕ 
     12▕     /**

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

[2022-03-31 01:42:26.727] [renderer1] [error] PARSE ERROR: Laravel Framework 9.6.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  clear-compiled                    Remove the compiled class file
  completion                        Dump the shell completion script
  db                                Start a new database CLI session
  down                              Put the application into maintenance / demo mode
  env                               Display the current framework environment
  help                              Display help for a command
  inspire                           Display an inspiring quote
  list                              List commands
  migrate                           Run the database migrations
  optimize                          Cache the framework bootstrap files
  serve                             Serve the application on the PHP development server
  test                              Run the application tests
  tinker                            Interact with your application
  ui                                Swap the front-end scaffolding for the application
  up                                Bring the application out of maintenance mode
 activitylog
  activitylog:clean                 Clean up old records from the activity log.
 auth
  auth:clear-resets                 Flush expired password reset tokens
 backup
  backup:clean                      Remove all backups older than specified number of days in config.
  backup:list                       Display a list of all backups.
  backup:monitor                    Monitor the health of all backups.
  backup:run                        Run the backup.
 cache
  cache:clear                       Flush the application cache
  cache:forget                      Remove an item from the cache
  cache:table                       Create a migration for the cache database table
 config
  config:cache                      Create a cache file for faster configuration loading
  config:clear                      Remove the configuration cache file
 db
  db:seed                           Seed the database with records
  db:wipe                           Drop all tables, views, and types
 event
  event:cache                       Discover and cache the application's events and listeners
  event:clear                       Clear all cached events and listeners
  event:generate                    Generate the missing events and listeners based on registration
  event:list                        List the application's events and listeners
 key
  key:generate                      Set the application key
 log-viewer
  log-viewer:check                  Check all LogViewer requirements.
  log-viewer:clear                  Clear all generated log files
  log-viewer:publish                Publish all LogViewer resources and config files
  log-viewer:stats                  Display stats of all logs.
 make
  make:cast                         Create a new custom Eloquent cast class
  make:channel                      Create a new channel class
  make:chart                        Create a new chart class
  make:command                      Create a new Artisan command
  make:component                    Create a new view component class
  make:controller                   Create a new controller class
  make:event                        Create a new event class
  make:exception                    Create a new custom exception class
  make:factory                      Create a new model factory
  make:job                          Create a new job class
  make:listener                     Create a new event listener class
  make:mail                         Create a new email class
  make:middleware                   Create a new middleware class
  make:migration                    Create a new migration file
  make:model                        Create a new Eloquent model class
  make:notification                 Create a new notification class
  make:observer                     Create a new observer class
  make:policy                       Create a new policy class
  make:provider                     Create a new service provider class
  make:request                      Create a new form request class
  make:resource                     Create a new resource
  make:rule                         Create a new validation rule
  make:scope                        Create a new scope class
  make:seeder                       Create a new seeder class
  make:test                         Create a new test class
 migrate
  migrate:fresh                     Drop all tables and re-run all migrations
  migrate:install                   Create the migration repository
  migrate:refresh                   Reset and re-run all migrations
  migrate:reset                     Rollback all database migrations
  migrate:rollback                  Rollback the last database migration
  migrate:status                    Show the status of each migration
 model
  model:prune                       Prune models that are no longer needed
 module
  module:delete                     Delete a module from the application
  module:disable                    Disable the specified module.
  module:dump                       Dump-autoload the specified module or for all module.
  module:enable                     Enable the specified module.
  module:install                    Install the specified module by given package name (vendor/name).
  module:list                       Show list of all modules.
  module:make                       Create a new module.
  module:make-command               Generate new Artisan command for the specified module.
  module:make-component             Create a new component-class for the specified module.
  module:make-component-view        Create a new component-view for the specified module.
  module:make-controller            Generate new restful controller for the specified module.
  module:make-event                 Create a new event class for the specified module
  module:make-factory               Create a new model factory for the specified module.
  module:make-job                   Create a new job class for the specified module
  module:make-listener              Create a new event listener class for the specified module
  module:make-mail                  Create a new email class for the specified module
  module:make-middleware            Create a new middleware class for the specified module.
  module:make-migration             Create a new migration for the specified module.
  module:make-model                 Create a new model for the specified module.
  module:make-notification          Create a new notification class for the specified module.
  module:make-policy                Create a new policy class for the specified module.
  module:make-provider              Create a new service provider class for the specified module.
  module:make-request               Create a new form request class for the specified module.
  module:make-resource              Create a new resource class for the specified module.
  module:make-rule                  Create a new validation rule for the specified module.
  module:make-seed                  Generate new seeder for the specified module.
  module:make-test                  Create a new test class for the specified module.
  module:migrate                    Migrate the migrations from the specified module or from all modules.
  module:migrate-fresh              Drop all database tables and re-run all migrations
  module:migrate-refresh            Rollback & re-migrate the modules migrations.
  module:migrate-reset              Reset the modules migrations.
  module:migrate-rollback           Rollback the modules migrations.
  module:migrate-status             Status for all module migrations
  module:publish                    Publish a module's assets to the application
  module:publish-config             Publish a module's config files to the application
  module:publish-migration          Publish a module's migrations to the application
  module:publish-translation        Publish a module's translations to the application
  module:route-provider             Create a new route service provider for the specified module.
  module:seed                       Run database seeder from the specified module or from all modules.
  module:setup                      Setting up modules folders for first use.
  module:unuse                      Forget the used module with module:use
  module:update                     Update dependencies for the specified module or for all modules.
  module:use                        Use the specified module.
  module:v6:migrate                 Migrate laravel-modules v5 modules statuses to v6.
 notifications
  notifications:table               Create a migration for the notifications table
 optimize
  optimize:clear                    Remove the cached bootstrap files
 package
  package:discover                  Rebuild the cached package manifest
 permission
  permission:cache-reset            Reset the permission cache
  permission:create-permission      Create a permission
  permission:create-role            Create a role
  permission:setup-teams            Setup the teams feature by generating the associated migration.
  permission:show                   Show a table of roles and permissions per guard
 pos
  pos:autoSendPaymentReminder       Sends payment reminder to customers with overdue sells if auto send is enabled in notification template for payment reminder
  pos:dummyBusiness                 Creates a dummy business in the application
  pos:generateRecurringExpense      Creates recurring expenses if enabled
  pos:generateSubscriptionInvoices  Creates subscribed invoices if enabled
  pos:mapPurchaseSell               Delete existing mapping and Add mapping for purchase & Sell for all transactions of all businesses.
  pos:updateRewardPoints            Checks reward points expiry and updates customer reward points
 queue
  queue:batches-table               Create a migration for the batches database table
  queue:clear                       Delete all of the jobs from the specified queue
  queue:failed                      List all of the failed queue jobs
  queue:failed-table                Create a migration for the failed queue jobs database table
  queue:flush                       Flush all of the failed queue jobs
  queue:forget                      Delete a failed queue job
  queue:listen                      Listen to a given queue
  queue:monitor                     Monitor the size of the specified queues
  queue:prune-batches               Prune stale entries from the batches database
  queue:prune-failed                Prune stale entries from the failed jobs table
  queue:restart                     Restart queue worker daemons after their current job
  queue:retry                       Retry a failed queue job
  queue:retry-batch                 Retry the failed jobs for a batch
  queue:table                       Create a migration for the queue jobs database table
  queue:work                        Start processing jobs on the queue as a daemon
 route
  route:cache                       Create a route cache file for faster route registration
  route:clear                       Remove the route cache file
  route:list                        List all registered routes
 sail
  sail:install                      Install Laravel Sail's default Docker Compose file
  sail:publish                      Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired             Prune tokens expired for more than specified number of hours.
 schedule
  schedule:clear-cache              Delete the cached mutex files created by scheduler
  schedule:list                     List the scheduled commands
  schedule:run                      Run the scheduled commands
  schedule:test                     Run a scheduled command
  schedule:work                     Start the schedule worker
 schema
  schema:dump                       Dump the given database schema
 session
  session:table                     Create a migration for the session database table
 storage
  storage:link                      Create the symbolic links configured for the application
 stub
  stub:publish                      Publish all stubs that are available for customization
 twilio
  twilio:call                       Twilio command to test Twilio Call API Integration.
  twilio:sms                        Twilio command to test Twilio SMS API Integration.
 ui
  ui:auth                           Scaffold basic login and registration views and routes
  ui:controllers                    Scaffold the authentication controllers
 vendor
  vendor:publish                    Publish any publishable assets from vendor packages
 view
  view:cache                        Compile all of the application's Blade templates
  view:clear                        Clear all compiled view files
___VSCODE_LARAVEL_EXTRA_INSTELLISENSE_OUTPUT___
   Symfony\Component\ErrorHandler\Error\FatalError 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1
  ➜   1▕


   Whoops\Exception\ErrorException 

  Uncaught ReflectionException: Class "App\Policies\ModelPolicy" does not exist in Command line code:1
Stack trace:
#0 Command line code(1): ReflectionClass->__construct()
#1 [internal function]: {closure}()
#2 Command line code(1): array_map()
#3 {main}
  thrown

  at Command line code:1

   Whoops\Exception\ErrorException 

  file_get_contents(Command line code): Failed to open stream: No such file or directory

  at vendor/filp/whoops/src/Whoops/Exception/Frame.php:123
    119▕                 return null;
    120▕             }
    121▕ 
    122▕             try {
  ➜ 123▕                 $this->fileContentsCache = file_get_contents($filePath);
    124▕             } catch (ErrorException $exception) {
    125▕                 // Internal file paths of PHP extensions cannot be opened
    126▕             }
    127▕         }

      [2m+7 vendor frames [22m
  8   [internal]:0
      Whoops\Run::handleShutdown()
  ➜   1▕

      [2m+1 vendor frames [22m
  2   [internal]:0
      Whoops\Run::handleShutdown()

